I. MODELS
---------

Bike model represents concrete bike available for rent.

Bike = {
  bike_model_id: { type: Number, required: true }, // references to BikeModel
  priceDay: { type: Number, required: true }, // price per day
  priceMonth: { type: Number, required: true }, // price per month
  // (???) should we have currency here? or USD assumed?
  photo: Array, // model photo shown if undefined
}

BikeModel model represents bike model of some particular brand. (e.g. Honda Africa Twin, Yamaha Super Tenere)
along with some additional information.

BikeModel = {
  brand: { type: String, required: true }, // e.g. Honda, Yamaha
  category: { type: String, required: true }, // e.g. Chopper, Scooter, used to choose bike type during search
  photo: Array // shown if bike photo undefined
}

User model represents customer (person who rents a bike).

User = {
  email: { type: String, required: true }, // used as unique identifier for user
  name: { // (???) not sure if name is optional or required?
    first_name: { type: String, required: true },
    last_name: { type: String, required: true }
  },
  address: { // (???) optional or required?
    permanent: { type: String, required: true },
    current: { type: String, required: true }
  },
  orders: [ {
    bike_id: Number,
    rentalPeriod: {
      rent_type: {type: String, enum: ['monthly', 'daily']}
      from: { type: Date, required:true },
      till: { type: Date, required:true }
    },
    options: [String] // array of strings, e.g. ['charger', 'insurance'],
    state: {type: String, enum: ['order_filling','order_filled','bike_issued','bike_returned']}
    delivery_address: { type: String, required: true }
  }, ... ]
}

Order model represents user order at any stage of processing:
 * order_filling - User is in process of editing an order.
 * order_filled - User filled an order and pressed 'Checkout' button.
 * bike_issued - Bike issued to customer.
 * bike_returned - Bike returned by customer.

Vendor = {...} // (???) need to clarify what is vendor

II. RESTful API (in progress...)
---------------

 * User

GET /api/users - get user list
POST /api/users - add new user
PUT /api/users/:id - modify existing user
GET /api/users/:id - get user details
DELETE /api/users/:id - delete user

 * Bike

GET /api/bikes - get list
POST /api/bikes - add new user
PUT /api/bikes/:id - 
GET /api/bikes/:id
DELETE /api/bikes/:id


